1. 整型。 
   tinyint  # 1个字节， -128~127 ， 0~255
   smallint # 2个字节
   mediumint  #3个字节
   int  #4个字节
   bigint #5个字节

2.  浮点数和定点数
    float # 单精度浮点数， 4个字节。
    float(m, n) , m 表示该值的总长度， n 表示小数点位数。 
    double #双精度浮点数， 8个字节。 
    double(m, n)， m 表示该值的总长度， n表示小数点位数。 
    decimal   #定点数
    decimal(m, n) 如果 m >n ，则字节数为m+2,  如果 n > m , 则字节数为 n +2； 
    定点数是更加精确的计数。 money decimal(m , d) not null; 


3. 时间类型。 
    timestamp  #CURRENT_TIMESTAMP 默认当前的时间戳
    datetime
    date
    time
    year 

4. 字符串类型。 进入游戏场失败
    char  #定长字符串 0-255字节
    varchar  #变长字符串 0-65535字节
    查询效率：char > varchar > text
    char(10)和varchar(10)的区别。 
    char是固定长度， 对于存储的字符长度小于10时，例如“xiao”, 会自动补齐6个字节的空格。 
    varchar是变长， 对于存储长度小于10时， 会按照实际存储的字符长度存储， 所以比较节省空间。 
    对比。 char占有的空间大， 查询效率高， 以空间换时间。 varchar占有的空间小， 查询效率慢， 以时间换空间。 
    如果存储的字符超过了10，例如“xiaopengxiao”, 会截取前10个字符， “xiaopengxi”, varchar 和 char 都会截取。 
    
    
    blob # 二进制长文本文件 0-65535字节， 64kb
    text #  长文本文件 0-65535字节， 64kb
    tinyblob #短二进制文本文件， 0 - 255字节。
    tinytext #短文本文件， 0 -255字节。 
    mediumblob 
    mediumtext
    longblob
    longtext
    
  
