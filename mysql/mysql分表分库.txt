  mysql的主从分离，实现一主多从， 主服务器（master）进行写操作， 多台从服务器（slave）进行读操作。 在一定的程度上解决了读的性能， 但是写的性能并没有减少。 
多台slave服务器分散了读请求数。 但是如果一张表的数据过大， 会导致读性能下降，响应慢。 这时要对表实现水平切分或者垂直切分。 

1. 垂直切分和水平切分。 
    水平切分， 由于单张表的数据量过大。 比如大于1000万条数据， 或者数据的占据空间超过2G。面对这种海量数据的查询时，会出现性能瓶颈， 响应时间慢。 将一张表
水平切分，比如1-10000的用户在表user_1， 10001-20000的用户在表user_2， 依次下去，然后，不同的表分布在不同的库，分布在不同的服务器。 

   垂直切分， 由于一张表的数据过大， 将一张表的字段切分， 分成不同的表。 

   选择水平切分的时候，要先看性能的瓶颈。 是一张表的数据数目过多导致，还是一张表占据的空间过大导致的。 

2. 垂直切分和水平切分带来的问题。 
    需要进行分表主要是因为表的数据量过大。 比如超过1000万条数据时， 读写都会延迟。 优先考虑垂直切分， 垂直切分简单，方便操作。 
   

3. 简述mysql分表操作和分区操作的工作原理， 说说分区和分表的使用场景和各自的优缺点。 


4. 分库。 
    分库有点类似垂直分表。 